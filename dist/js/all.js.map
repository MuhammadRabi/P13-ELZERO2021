{"version":3,"sources":["main.js"],"names":["scrollBtn","document","querySelector","showScrollBtn","window","scrollY","classList","add","remove","scrollToTop","scrollTo","top","behavior","addEventListener","header","addFixedHeader","sections","querySelectorAll","navLinks","scrollSpy","forEach","sec","offset","offsetTop","height","offsetHeight","id","getAttribute","link","ProgressSection","progressBars","loadProgressBar","span","style","width","dataset","statsSection","nums","started","num","startCount","el","goal","count","setInterval","textContent","clearInterval","countDown","Date","getTime","counter","currentTime","timeDifference","days","Math","floor","hours","minutes","seconds","innerHTML"],"mappings":"AAEA,IAAAA,UAAAC,SAAAC,cAAA,kBAEAC,cAAA,KACAC,OAAAC,SAAA,IACAL,UAAAM,UAAAC,IAAA,mBACAP,UAAAM,UAAAE,OAAA,oBAGAC,YAAA,KACAL,OAAAM,SAAA,CACAC,IAAA,EACAC,SAAA,YAIAR,OAAAS,iBAAA,SAAAV,eACAH,UAAAa,iBAAA,QAAAJ,aAGA,MAAAK,OAAAb,SAAAC,cAAA,UAEA,SAAAa,iBACAX,OAAAC,QAAA,IACAS,OAAAR,UAAAC,IAAA,aAEAO,OAAAR,UAAAE,OAAA,aAIAJ,OAAAS,iBAAA,SAAAE,gBAIA,IAAAC,SAAAf,SAAAgB,iBAAA,WACAC,SAAAjB,SAAAgB,iBAAA,cAEAE,UAAA,KACAH,SAAAI,SAAAC,IACA,IAAAV,EAAAP,OAAAC,QACAiB,EAAAD,EAAAE,UACAC,EAAAH,EAAAI,aACAC,EAAAL,EAAAM,aAAA,MAEAhB,EAAAW,GAAAX,EAAAW,EAAAE,GACAN,SAAAE,SAAAQ,IACAA,EAAAtB,UAAAE,OAAA,UACAP,SACAC,cAAA,oBAAAwB,MACApB,UAAAC,IAAA,iBAMAH,OAAAS,iBAAA,SAAAM,WAIA,IAAAU,gBAAA5B,SAAAC,cAAA,WACA4B,aAAA7B,SAAAgB,iBAAA,kBAEAc,gBAAA,KACA3B,OAAAC,SAAAwB,gBAAAN,UAAA,KACAO,aAAAV,SAAAY,IACAA,EAAAC,MAAAC,MAAAF,EAAAG,QAAAD,UAKA9B,OAAAS,iBAAA,SAAAkB,iBAIA,IAAAK,aAAAnC,SAAAC,cAAA,UACAmC,KAAApC,SAAAgB,iBAAA,qBACAqB,SAAA,EAIAlC,OAAAS,iBAAA,UAAA,KACAT,OAAAC,SAAA+B,aAAAb,UAAA,MACAe,SACAD,KAAAjB,SAAAmB,GAAAC,WAAAD,KAEAD,SAAA,MAGA,IAAAE,WAAAC,IACA,IAAAC,EAAAD,EAAAN,QAAAO,KACAC,EAAAC,aAAA,KACAH,EAAAI,cACAJ,EAAAI,aAAAH,GACAI,cAAAH,KAEA,IAAAD,IAKAK,UAAA,IAAAC,KAAA,0BAAAC,UAEAC,QAAAN,aAAA,KAEA,IAAAO,GAAA,IAAAH,MAAAC,UAGAG,EAAAL,UAAAI,EAEAE,EAAAC,KAAAC,MAAAH,EAAA,OACAI,EAAAF,KAAAC,MACAH,EAAA,MAAA,MAEAK,EAAAH,KAAAC,MAAAH,EAAA,KAAA,KACAM,EAAAJ,KAAAC,MAAAH,EAAA,IAAA,KAEAnD,SAAAC,cAAA,SAAAyD,UAAAN,EAAA,GAAA,IAAAA,IAAAA,EACApD,SAAAC,cAAA,UAAAyD,UAAAH,EAAA,GAAA,IAAAA,IAAAA,EACAvD,SAAAC,cAAA,YAAAyD,UACAF,EAAA,GAAA,IAAAA,IAAAA,EACAxD,SAAAC,cAAA,YAAAyD,UACAD,EAAA,GAAA,IAAAA,IAAAA,IACA","file":"all.js","sourcesContent":["// scroll to top button\r\n\r\nlet scrollBtn = document.querySelector(\".scroll-to-top\");\r\n\r\nlet showScrollBtn = () => {\r\n  window.scrollY >= 600\r\n    ? scrollBtn.classList.add(\"show-scroll-btn\")\r\n    : scrollBtn.classList.remove(\"show-scroll-btn\");\r\n};\r\n\r\nlet scrollToTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n\r\nwindow.addEventListener(\"scroll\", showScrollBtn);\r\nscrollBtn.addEventListener(\"click\", scrollToTop);\r\n\r\n// Fixed Header\r\nconst header = document.querySelector(\"header\");\r\n\r\nfunction addFixedHeader() {\r\n  if (window.scrollY > 600) {\r\n    header.classList.add(\"fixed-nav\");\r\n  } else {\r\n    header.classList.remove(\"fixed-nav\");\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"scroll\", addFixedHeader);\r\n\r\n// scrollSpy\r\n\r\nlet sections = document.querySelectorAll(\"section\");\r\nlet navLinks = document.querySelectorAll(\".nav__link\");\r\n\r\nlet scrollSpy = () => {\r\n  sections.forEach((sec) => {\r\n    let top = window.scrollY;\r\n    let offset = sec.offsetTop;\r\n    let height = sec.offsetHeight;\r\n    let id = sec.getAttribute(\"id\");\r\n\r\n    if (top > offset && top < offset + height) {\r\n      navLinks.forEach((link) => {\r\n        link.classList.remove(\"active\");\r\n        document\r\n          .querySelector(`.nav__link[href*=${id}]`)\r\n          .classList.add(\"active\");\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nwindow.addEventListener(\"scroll\", scrollSpy);\r\n\r\n// fill the progress bar when scroll to skills section\r\n\r\nlet ProgressSection = document.querySelector(\".skills\");\r\nlet progressBars = document.querySelectorAll(\".progress span\");\r\n\r\nlet loadProgressBar = () => {\r\n  if (window.scrollY >= ProgressSection.offsetTop - 250) {\r\n    progressBars.forEach((span) => {\r\n      span.style.width = span.dataset.width;\r\n    });\r\n  }\r\n};\r\n\r\nwindow.addEventListener(\"scroll\", loadProgressBar);\r\n\r\n// stats\r\n\r\nlet statsSection = document.querySelector(\".stats\");\r\nlet nums = document.querySelectorAll(\".stats-box .count\");\r\nlet started = false; // function started? no!\r\n\r\n// the action starts when scrolling to certain section\r\n\r\nwindow.addEventListener(\"scroll\", () => {\r\n  if (window.scrollY >= statsSection.offsetTop - 200) {\r\n    if (!started) {\r\n      nums.forEach((num) => startCount(num));\r\n    }\r\n    started = true;\r\n  }\r\n});\r\nlet startCount = (el) => {\r\n  let goal = el.dataset.goal;\r\n  let count = setInterval(() => {\r\n    el.textContent++;\r\n    if (el.textContent == goal) {\r\n      clearInterval(count);\r\n    }\r\n  }, 2000 / goal);\r\n};\r\n\r\n// The Countdown\r\n\r\nlet countDown = new Date(\"june 30, 2022 23:59:59\").getTime();\r\n\r\nlet counter = setInterval(() => {\r\n  // get current time in ms\r\n  let currentTime = new Date().getTime();\r\n\r\n  // Find The Date Difference Between Now And Countdown Date\r\n  let timeDifference = countDown - currentTime;\r\n\r\n  let days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n  let hours = Math.floor(\r\n    (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  let minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n  let seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\r\n  document.querySelector(\".days\").innerHTML = days < 10 ? `0${days}` : days;\r\n  document.querySelector(\".hours\").innerHTML = hours < 10 ? `0${hours}` : hours;\r\n  document.querySelector(\".minutes\").innerHTML =\r\n    minutes < 10 ? `0${minutes}` : minutes;\r\n  document.querySelector(\".seconds\").innerHTML =\r\n    seconds < 10 ? `0${seconds}` : seconds;\r\n}, 1000);\r\n"]}